# - Config file for the FooBar package
# It defines the following variables
#  FOOBAR_INCLUDE_DIRS - include directories for FooBar
#  FOOBAR_LIBRARIES    - libraries to link against
#  FOOBAR_EXECUTABLE   - the bar executable

# Compute paths
#get_filename_component(@PROJECT_NAME_UPPER@_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
#get_filename_component(@PROJECT_NAME_UPPER@_CMAKE_DIR "@INSTALL_CMAKE_DIR@" PATH)

MESSAGE(STATUS "@PROJECT_NAME@")

set(@PROJECT_NAME_OLD@_NAME @PROJECT_NAME@)

# location of this file...
set(@PROJECT_NAME@_CMAKE_DIR "@CMAKE_INSTALL_PREFIX@/lib/cmake")

set(@PROJECT_NAME@_INSTALL_PREFIX "@CMAKE_INSTALL_PREFIX@")
set(@PROJECT_NAME@_INCLUDE_DIR    "@CONF_INCLUDE_DIR@")
set(@PROJECT_NAME@_INCLUDE_DIRS   "@CONF_INCLUDE_DIRS@")
set(@PROJECT_NAME@_LIBRARY_DIR    "@CONF_LIBRARY_DIR@")

set(@PROJECT_NAME_OLD@_INCLUDE_DIR    "@CONF_INCLUDE_DIR@")
set(@PROJECT_NAME_OLD@_INCLUDE_DIRS   "@CONF_INCLUDE_DIRS@")

# Our library dependencies (contains definitions for IMPORTED targets)
if(NOT TARGET @PROJECT_NAME@ AND NOT @PROJECT_NAME@_BINARY_DIR)
	#message("${@PROJECT_NAME@_CMAKE_DIR}")
	#include("${@PROJECT_NAME@_CMAKE_DIR}/@PROJECT_NAME@/@PROJECT_NAME@Targets.cmake")
	include("@CONF_TARGETS_FILE@")
endif()

# These are IMPORTED targets created by FooBarTargets.cmake
set(@PROJECT_NAME@_LIBRARIES @PROJECT_NAME@ @libs@)

# dox
set(@PROJECT_NAME@_DOX_TAGFILE @DOX_TAGFILE@)
set(DOX_TAGFILES ${DOX_TAGFILES} ${@PROJECT_NAME@_DOX_TAGFILE})


# add include dirs to current project
include_directories(${@PROJECT_NAME@_INCLUDE_DIRS})
link_directories(${@PROJECT_NAME@_LIBRARY_DIR})

# add libs to current project
LIST(APPEND libs ${@PROJECT_NAME@_LIBRARIES})
LIST(REMOVE_DUPLICATES libs)


