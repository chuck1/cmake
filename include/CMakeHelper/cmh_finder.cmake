
# clear variables
SET(${PACKAGE_NAME}_LIBRARIES)

MESSAGE(STATUS "${PACKAGE_NAME}")
#MESSAGE(STATUS "${PACKAGE_NAME}_FIND_COMPONENTS ${${PACKAGE_NAME}_FIND_COMPONENTS}")
#MESSAGE(STATUS "${PACKAGE_NAME}_FIND_VERSION    ${${PACKAGE_NAME}_FIND_VERSION}")

#FOREACH(c ${PACKAGE_COMPONENT})
FOREACH(c ${${PACKAGE_NAME}_FIND_COMPONENTS})

	#MESSAGE(STATUS "c ${c}")

	#LIST(FIND ${PACKAGE_NAME}_FIND_COMPONENTS "${c}" idx_${c})
	LIST(FIND PACKAGE_COMPONENTS "${c}" idx_${c})

	STRING(COMPARE EQUAL ${idx_${c}} "-1" not_${c})

	IF(NOT ${not_${c}})
		SET(comp ${PACKAGE_NAME}_${c}_${${PACKAGE_NAME}_FIND_VERSION})
		IF(${DEBUG})
			#SET(comp ${comp}_db)
		ENDIF()

		FIND_PACKAGE(${comp} REQUIRED)

		SET(complib ${comp})
		IF(${SHARED})
			SET(complib ${complib}.so)
		ENDIF()

		MESSAGE(STATUS "    ${complib}")
		#MESSAGE(STATUS "    ${comp}_LIBRARIES: ${${comp}_LIBRARIES}")

		LIST(APPEND ${PACKAGE_NAME}_SHARED_LIBRARIES ${${comp}_SHARED_LIBRARIES})
		LIST(REMOVE_DUPLICATES ${PACKAGE_NAME}_SHARED_LIBRARIES)
		
		LIST(APPEND ${PACKAGE_NAME}_STATIC_LIBRARIES ${${comp}_STATIC_LIBRARIES})
		LIST(REMOVE_DUPLICATES ${PACKAGE_NAME}_STATIC_LIBRARIES)

	ELSE()
		MESSAGE(FATAL_ERROR "${c} not found")
		#MESSAGE(FATAL_ERROR "
	ENDIF()

	#MESSAGE(STATUS "${PACKAGE_NAME}_LIBRARIES ${${PACKAGE_NAME}_LIBRARIES}")       

ENDFOREACH()

#MESSAGE(STATUS "${PACKAGE_NAME}_LIBRARIES ${${PACKAGE_NAME}_LIBRARIES}")       
#MESSAGE(STATUS "libs ${libs}")       

# set in parent scope
SET(${PACKAGE_NAME}_SHARED_LIBRARIES ${${PACKAGE_NAME}_SHARED_LIBRARIES})
SET(${PACKAGE_NAME}_STATIC_LIBRARIES ${${PACKAGE_NAME}_STATIC_LIBRARIES})



